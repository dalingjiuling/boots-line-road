# 项目端口
server:
  port: 8090

# 通用环境
spring:
  profiles:
    active: multi-dev
  dubbo: 
    application:            #应用配置，用于配置当前应用信息，不管该应用是提供者还是消费者。
      name: boots-line-road
    server: false
    registry:                 #注册中心配置，用于配置连接注册中心相关信息。
      address: N/A
      
# PageHelper分页插件
pagehelper: 
  # 指定分页插件使用哪种方言
  helperDialect: mysql
  # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询
  reasonable: true
  # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。 使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest
  supportMethodsArguments: true
  # 配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
  params: count=countSql

# PageHelper Mapper
#mapper:
#    mappers:
#        - com.line.road.framework.mybatis.CustomizeMySqlMapper
#    not-empty: true
#    identity: MYSQL

# "---"来作为分隔符.第一部分通用配置部分，表示三个环境都通用的属性， 后面三段分别为：开发，测试，生产，用spring.profiles指定了一个值(开发为dev，测试为test，生产为prod)，这个值表示该段配置应该用在哪个profile里面。
---
# development environment
spring:
  profiles: dev
  
# Mybatis配置
mybatis:
  # 搜索指定包别名
  type-aliases-package: com.line.road.modular.persistence.primary.model
  # 配置mapp的扫描，找打所有的*Mapper.xml映射文件
  mapper-locations: classpath:/mybatis/system/*.xml
  # 加载全局的配置文件
  config-location: classpath:/mybatis/mybatis-config.xml
---
#test environment
spring:
  profiles: test
  
mybatis:
  type-aliases-package: com.line.road.modular.persistence.primary.model
  mapper-locations: classpath:/mybatis/system/*.xml
  config-location: classpath:/mybatis/mybatis-config.xml
--- 
#production environment
spring:
  profiles: prod

mybatis:
  type-aliases-package: com.line.road.modular.persistence.primary.model
  mapper-locations: classpath:/mybatis/system/*.xml
  config-location: classpath:/mybatis/mybatis-config.xml
---
#multi dataSource dev environment
spring:
  profiles: multi-dev